// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductionSystem.Web.Data;

namespace ProductionSystem.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200323222850_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LineaId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LineaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Deshecho", b =>
                {
                    b.Property<int>("Id");

                    b.Property<decimal>("Cantidad");

                    b.Property<string>("Observaciones");

                    b.HasKey("Id");

                    b.ToTable("Deshecho");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.EmpleadoProducción", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEmpleado");

                    b.Property<int?>("PersonaId");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("EmpleadoProducción");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.EncargadoEmpresa", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int?>("PersonaId");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("EncargadoEmpresa");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Envase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad");

                    b.Property<bool>("Isplastic");

                    b.HasKey("Id");

                    b.ToTable("Envase");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Etiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Altura");

                    b.Property<decimal>("Ancho");

                    b.Property<bool>("IsWaterProof");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<decimal>("PrecioUnitario");

                    b.HasKey("Id");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Fase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.Property<int>("Numero");

                    b.HasKey("Id");

                    b.ToTable("Fase");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsRawProduct");

                    b.Property<string>("Nombre");

                    b.Property<decimal>("Stock");

                    b.HasKey("Id");

                    b.ToTable("Insumo");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.InsumoUsado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadUsada");

                    b.Property<int?>("InsumoId");

                    b.Property<int?>("ProduccionId");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ProduccionId");

                    b.ToTable("InsumoUsados");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.InventarioEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId");

                    b.Property<int?>("ProductoRealId");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProductoRealId");

                    b.ToTable("InventarioEmpresas");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Linea");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId");

                    b.Property<DateTime>("Fecha");

                    b.Property<decimal>("MontoTotal");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha");

                    b.Property<int?>("ProductoRealId");

                    b.Property<bool>("estado");

                    b.HasKey("Id");

                    b.HasIndex("ProductoRealId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMaterno");

                    b.Property<string>("ApellidoPaterno");

                    b.Property<string>("CI");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Presentacion", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int?>("EnvaseId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EnvaseId");

                    b.ToTable("Presentacion");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Produccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpleadoProducciónId");

                    b.Property<int?>("FaseId");

                    b.Property<DateTime>("FechaProduccion");

                    b.Property<int?>("InsumoId");

                    b.Property<int?>("PedidoId");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoProducciónId");

                    b.HasIndex("FaseId");

                    b.HasIndex("InsumoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produccion");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("PresentacionId");

                    b.Property<int?>("SaborId");

                    b.Property<int?>("TipoProductoId");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("SaborId");

                    b.HasIndex("TipoProductoId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.ProductoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Monto");

                    b.Property<int?>("PagoId");

                    b.Property<int?>("ProductoRealId");

                    b.Property<int>("UnidadesPagadas");

                    b.HasKey("Id");

                    b.HasIndex("PagoId");

                    b.HasIndex("ProductoRealId");

                    b.ToTable("ProductoPagos");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.ProductoReal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int?>("ProductoId");

                    b.Property<int>("stock");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoReal");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InsumoId");

                    b.Property<decimal>("Porcentaje");

                    b.Property<int?>("ProductoRealId");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ProductoRealId");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Resultado", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("Cantidad");

                    b.Property<string>("Observaciones");

                    b.HasKey("Id");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Sabor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Sabor");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dirección");

                    b.Property<int?>("EmpresaId");

                    b.Property<string>("Encargado");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Sucursal");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.TipoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Categoria", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Linea", "Linea")
                        .WithMany("Categorias")
                        .HasForeignKey("LineaId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Deshecho", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Produccion", "Produccion")
                        .WithOne("Deshecho")
                        .HasForeignKey("ProductionSystem.Web.Data.Entities.Deshecho", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.EmpleadoProducción", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.EncargadoEmpresa", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Empresa", "Empresa")
                        .WithOne("EncargadoEmpresa")
                        .HasForeignKey("ProductionSystem.Web.Data.Entities.EncargadoEmpresa", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductionSystem.Web.Data.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.InsumoUsado", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Insumo", "Insumo")
                        .WithMany("InsumosUsados")
                        .HasForeignKey("InsumoId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Produccion", "Produccion")
                        .WithMany("InsumosUsados")
                        .HasForeignKey("ProduccionId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.InventarioEmpresa", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Empresa", "Empresa")
                        .WithMany("InventarioEmpresas")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.ProductoReal", "ProductoReal")
                        .WithMany("InventarioEmpresas")
                        .HasForeignKey("ProductoRealId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Pago", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Empresa", "Empresa")
                        .WithMany("Pagos")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Pedido", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.ProductoReal", "ProductoReal")
                        .WithMany("Pedido")
                        .HasForeignKey("ProductoRealId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Presentacion", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Envase", "Envase")
                        .WithMany("Presentaciones")
                        .HasForeignKey("EnvaseId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Etiqueta", "Etiqueta")
                        .WithOne("Presentacion")
                        .HasForeignKey("ProductionSystem.Web.Data.Entities.Presentacion", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Produccion", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.EmpleadoProducción", "EmpleadoProducción")
                        .WithMany("Producciones")
                        .HasForeignKey("EmpleadoProducciónId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Fase", "Fase")
                        .WithMany("Producciones")
                        .HasForeignKey("FaseId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Insumo")
                        .WithMany("Producciones")
                        .HasForeignKey("InsumoId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Pedido", "Pedido")
                        .WithMany("Producciones")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Producto", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.Sabor", "Sabor")
                        .WithMany("Productos")
                        .HasForeignKey("SaborId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.TipoProducto", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("TipoProductoId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.ProductoPago", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Pago", "Pago")
                        .WithMany("ProductoPago")
                        .HasForeignKey("PagoId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.ProductoReal", "ProductoReal")
                        .WithMany("ProductoPago")
                        .HasForeignKey("ProductoRealId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.ProductoReal", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Producto", "Producto")
                        .WithMany("ProductosReales")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Receta", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Insumo", "Insumo")
                        .WithMany("Recetas")
                        .HasForeignKey("InsumoId");

                    b.HasOne("ProductionSystem.Web.Data.Entities.ProductoReal", "ProductoReal")
                        .WithMany("Recetas")
                        .HasForeignKey("ProductoRealId");
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Resultado", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Produccion", "Produccion")
                        .WithOne("Resultado")
                        .HasForeignKey("ProductionSystem.Web.Data.Entities.Resultado", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductionSystem.Web.Data.Entities.Sucursal", b =>
                {
                    b.HasOne("ProductionSystem.Web.Data.Entities.Empresa", "Empresa")
                        .WithMany("Sucursales")
                        .HasForeignKey("EmpresaId");
                });
#pragma warning restore 612, 618
        }
    }
}
